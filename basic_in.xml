<?xml version="1.0"?>
<!-- Input for XPath tests -->
<xpath_test>

   <!-- Example 1 from http://www.zvon.org/xxl/XPathTutorial/General/examples.html -->

   <source name="Example 1 / test1" xpath_expr="/AAA">
      <AAA>
         <BBB/>
         <CCC/>
         <BBB/>
         <BBB/>
         <DDD>
            <BBB/>
         </DDD>
         <CCC/>
     </AAA>      
   </source>
   <source name="Example 1 / test2" xpath_expr="/AAA/CCC">
      <AAA>
         <BBB/>
         <CCC/>
         <BBB/>
         <BBB/>
         <DDD>
            <BBB/>
         </DDD>
         <CCC/>
     </AAA>      
   </source>

   <source name="Example 1 / test3" xpath_expr="/AAA/DDD/BBB">
      <AAA>
         <BBB/>
         <CCC/>
         <BBB/>
         <BBB/>
         <DDD>
            <BBB/>
         </DDD>
         <CCC/>
     </AAA>      
   </source>

   <!-- Example 2 from http://www.zvon.org/xxl/XPathTutorial/General/examples.html -->

   <source name="Example 2 / test4" xpath_expr="//BBB">
      <AAA>
         <BBB/>
         <CCC/>
         <BBB/>
         <DDD>
            <BBB/>
         </DDD>
         <CCC>
            <DDD>
               <BBB/>
               <BBB/>
            </DDD>
         </CCC>
      </AAA>
   </source>
   <source name="Example 2 / test5" xpath_expr="//DDD/BBB">
      <AAA>
         <BBB/>
         <CCC/>
         <BBB/>
         <DDD>
            <BBB/>
         </DDD>
         <CCC>
            <DDD>
               <BBB/>
               <BBB/>
            </DDD>
         </CCC>
      </AAA>
   </source>

   <!-- Example 3 from http://www.zvon.org/xxl/XPathTutorial/General/examples.html -->

   <source name="Example 3 / test6" xpath_expr="/AAA/CCC/DDD/*">
      <AAA>
         <XXX>
            <DDD>
               <BBB/>
               <BBB/>
               <EEE/>
               <FFF/>
            </DDD>
         </XXX>
         <CCC>
            <DDD>
               <BBB/>
               <BBB/>
               <EEE/>
               <FFF/>
            </DDD>
         </CCC>
         <CCC>
            <BBB>
               <BBB>
                  <BBB/>
               </BBB>
            </BBB>
         </CCC>
      </AAA>
   </source>

   <source name="Example 3 / test7" xpath_expr="/*/*/*/BBB">
      <AAA>
         <XXX>
            <DDD>
               <BBB/>
               <BBB/>
               <EEE/>
               <FFF/>
            </DDD>
         </XXX>
         <CCC>
            <DDD>
               <BBB/>
               <BBB/>
               <EEE/>
               <FFF/>
            </DDD>
         </CCC>
         <CCC>
            <BBB>
               <BBB>
                  <BBB/>
               </BBB>
            </BBB>
         </CCC>
      </AAA>
   </source>

   <source name="Example 3 / test8" xpath_expr="//*">
      <AAA>
         <XXX>
            <DDD>
               <BBB/>
               <BBB/>
               <EEE/>
               <FFF/>
            </DDD>
         </XXX>
         <CCC>
            <DDD>
               <BBB/>
               <BBB/>
               <EEE/>
               <FFF/>
            </DDD>
         </CCC>
         <CCC>
            <BBB>
               <BBB>
                  <BBB/>
               </BBB>
            </BBB>
         </CCC>
      </AAA>
   </source>

   <source name="Example 4 / test9" xpath_expr="/AAA/BBB[1]">
      <AAA>
         <BBB/>
         <BBB/>
         <BBB/>
         <BBB/>
      </AAA>
   </source>

   <source name="Example 4 / test10" xpath_expr="/AAA/BBB[last()]">
      <AAA>
         <BBB/>
         <BBB/>
         <BBB/>
         <BBB/>
      </AAA>
   </source>



<!-- 

From the example, we understand (aargh) that our trick to use
attributes to mark selected nodes in the TinyXML tree will not be usable for attributes themselves
How can we do this ?
Solution can be :
1. To change TiXmlBase class to make it accept a numerical signature. 
This would be available at once for TiXmlElement and TiXmlAttribute
2. Add some selection attribute like tinyxpath-attribute-name="1"
3. Mark every attribute value on input with a prefix containing an integer like "[0]old value"

Currently preferred method : 3

 -->

   <source name="Example 5 / test11" xpath_expr="//@id">
      <AAA>
         <BBB id = "b1"/>
         <BBB id = "b2"/>
         <BBB name = "bbb"/>
         <BBB/>
      </AAA>
   </source>

</xpath_test>
